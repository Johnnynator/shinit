#!/bin/sh

SHINIT_ROOT=${SHINIT_ROOT:-/usr/libexec/shinit}
SHINIT_HOME=${SHINIT_HOME:-/var/lib/shinit}
SHINIT_STARTWAIT=${SHINIT_STARTWAIT:-0}
SHINIT_BACKOFF=${SHINIT_BACKOFF:-10}

# shellcheck source=libexec/lib.sh
. "$SHINIT_ROOT/lib.sh"

[ -f "$SHINIT_HOME/done" ] && die "shinit has already been run, exiting..."

sleep -- "$SHINIT_STARTWAIT"

for attempt in 1 2 3 ; do
    for provider in "$SHINIT_ROOT"/provider/*; do
        # shellcheck source=libexec/provider/digitalocean
        . "$provider"
        provider=${provider##*/}

        log "Trying provider: $provider"
        check && break 2
        provider=
    done
    sleep -- "$SHINIT_BACKOFF"
done

# No provider above matched, so something has gone wrong or we're on
# an strange new cloud.
[ $attempt -eq 3 ] && [ -z "$provider" ] && die "No provider supplied information"

# Time to set the variables for configuration.  If the base
# information was not fully populated then we need to bail out.
load
confirm_base_info || die "Base information was not set"
log "Loaded from provider: $provider"

configure_hostname
configure_keys

# Initialization tasks should generally only be run once, so we set a
# magic flag to prevent re-running.
touch -- "$SHINIT_ROOT/done"
